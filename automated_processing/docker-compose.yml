services:
  # Redis service - required for Celery
  redis:
    image: redis:7-alpine
    container_name: redis-automated
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - automated-network

  # API service - FastAPI with automated processing endpoints
  api:
    build:
      context: ..  # Parent directory (e6-sqlglot-function)
      dockerfile: Dockerfile.api
    container_name: converter-api
    ports:
      - "8080:8080"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../results:/app/results
      - ../logs:/app/logs
    networks:
      - automated-network
    restart: unless-stopped

  # Worker service - Celery workers for distributed processing
  worker:
    build:
      context: ..  # Parent directory (e6-sqlglot-function)
      dockerfile: automated_processing/Dockerfile.worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./results:/app/results
      - ./logs:/app/logs
      - ./iceberg_warehouse:/app/iceberg_warehouse
    networks:
      - automated-network
    deploy:
      replicas: 3  # Run 3 worker containers
    restart: unless-stopped


volumes:
  redis-data:
  results:
  logs:

networks:
  automated-network:
    driver: bridge